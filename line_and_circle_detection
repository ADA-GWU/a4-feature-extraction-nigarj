import cv2
import numpy as np
import os
import matplotlib.pyplot as plt

# --- Input/Output Setup ---
INPUT_PATH = 'images/original/jasmine.jpeg'



# --- Load Image and Convert to Grayscale ---
img = cv2.imread(INPUT_PATH)
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# --- 6. Line Detection using Hough Transform ---
line_img = img.copy()
blurred = cv2.GaussianBlur(gray, (5, 5), 0)

# Reuse canny edges from earlier
edges = cv2.Canny(blurred, 50, 150)
# Detect lines
lines = cv2.HoughLinesP(edges, rho=1, theta=np.pi/180, threshold=80, minLineLength=30, maxLineGap=10)

# Draw lines
if lines is not None:
    for line in lines:
        x1, y1, x2, y2 = line[0]
        cv2.line(line_img, (x1, y1), (x2, y2), (0, 255, 0), 2)  # Green lines

# Save result
line_output_dir = 'images/hough_lines/'
os.makedirs(line_output_dir, exist_ok=True)
cv2.imwrite(line_output_dir + 'lines_detected.jpg', line_img)

# --- 7. Circle Detection using Hough Transform ---
circle_img = img.copy()
gray_blurred = cv2.medianBlur(gray, 5)

# Detect circles

# Adjusted Hough Circle Parameters
circles = cv2.HoughCircles(
    gray_blurred,
    cv2.HOUGH_GRADIENT,
    dp=1.2,           # inverse ratio of accumulator resolution
    minDist=40,       # minimum distance between detected centers
    param1=100,       # higher threshold for Canny edge detector
    param2=40,        # accumulator threshold (higher = stricter)
    minRadius=20,     # adjust based on expected size
    maxRadius=80
)
# Draw circles
if circles is not None:
    circles = np.uint16(np.around(circles))
    for circle in circles[0, :]:
        x, y, r = circle
        cv2.circle(circle_img, (x, y), r, (255, 0, 255), 2)  # Pink circles
        cv2.circle(circle_img, (x, y), 2, (0, 255, 255), 3)  # Center

# Save result
circle_output_dir = 'images/hough_circles/'
os.makedirs(circle_output_dir, exist_ok=True)
cv2.imwrite(circle_output_dir + 'circles_detected.jpg', circle_img)

# --- Optional Visualization ---
def show(title, img):
    plt.figure(figsize=(6, 6))
    plt.imshow(img, cmap='gray')
    plt.title(title)
    plt.axis('off')
    plt.show()

# Optional: 
show("Detected Circles", circle_img)
